"use client";

import { useEffect, useMemo, useState } from "react";

type Country = { num: number; name: string; dial: string; flag: string };

const COUNTRIES: Country[] = [
  { num: 1, name: "Maroc", flag: "üá≤üá¶", dial: "212" },
  { num: 2, name: "√âtats-Unis", flag: "üá∫üá∏", dial: "1" },
  { num: 3, name: "Chine", flag: "üá®üá≥", dial: "86" },
  { num: 4, name: "Canada", flag: "üá®üá¶", dial: "1" },
  { num: 5, name: "Japon", flag: "üáØüáµ", dial: "81" },
  { num: 6, name: "Cor√©e du Sud", flag: "üá∞üá∑", dial: "82" },
  { num: 7, name: "Inde", flag: "üáÆüá≥", dial: "91" },
  { num: 8, name: "Singapour", flag: "üá∏üá¨", dial: "65" },
  { num: 9, name: "√âmirats Arabes Unis", flag: "üá¶üá™", dial: "971" },
  { num: 10, name: "Arabie Saoudite", flag: "üá∏üá¶", dial: "966" },
  { num: 11, name: "Qatar", flag: "üá∂üá¶", dial: "974" },
  { num: 12, name: "Kowe√Øt", flag: "üá∞üáº", dial: "965" },
  { num: 13, name: "Bahre√Øn", flag: "üáßüá≠", dial: "973" },
  { num: 14, name: "Oman", flag: "üá¥üá≤", dial: "968" },
  { num: 15, name: "France", flag: "üá´üá∑", dial: "33" },
  { num: 16, name: "Belgique", flag: "üáßüá™", dial: "32" },
  { num: 17, name: "Suisse", flag: "üá®üá≠", dial: "41" },
  { num: 18, name: "Luxembourg", flag: "üá±üá∫", dial: "352" },
  { num: 19, name: "Espagne", flag: "üá™üá∏", dial: "34" },
  { num: 20, name: "Italie", flag: "üáÆüáπ", dial: "39" },
  { num: 21, name: "Allemagne", flag: "üá©üá™", dial: "49" },
  { num: 22, name: "Royaume-Uni", flag: "üá¨üáß", dial: "44" },
  { num: 23, name: "Pays-Bas", flag: "üá≥üá±", dial: "31" },
  { num: 24, name: "Su√®de", flag: "üá∏üá™", dial: "46" },
  { num: 25, name: "Russie", flag: "üá∑üá∫", dial: "7" },
  { num: 26, name: "Alg√©rie", flag: "üá©üáø", dial: "213" },
  { num: 27, name: "Tunisie", flag: "üáπüá≥", dial: "216" },
  { num: 28, name: "√âgypte", flag: "üá™üá¨", dial: "20" },
  { num: 29, name: "S√©n√©gal", flag: "üá∏üá≥", dial: "221" },
  { num: 30, name: "C√¥te d‚ÄôIvoire", flag: "üá®üáÆ", dial: "225" },
  { num: 31, name: "Cameroun", flag: "üá®üá≤", dial: "237" },
  { num: 32, name: "Nigeria", flag: "üá≥üá¨", dial: "234" },
  { num: 33, name: "Afrique du Sud", flag: "üáøüá¶", dial: "27" },
];

const DEFAULT_INDEX = 0;

type Props = { value: string; onChange: (e164: string) => void };

export default function PhoneField({ value, onChange }: Props) {
  const [idx, setIdx] = useState<number>(DEFAULT_INDEX);
  const [local, setLocal] = useState<string>("");

  const country = COUNTRIES[idx];
  const dial = useMemo(() => `+${country.dial}`, [country]);

  // Compose E.164 √† chaque changement
  useEffect(() => {
    const cleaned = (local || "").replace(/[^\d]/g, "").replace(/^0+/, "");
    const e164 = cleaned ? `+${country.dial}${cleaned}` : "";
    onChange(e164);
  }, [country, local, onChange]);

  return (
    <div className="space-y-3">
      {/* S√©lecteur natif (toute la zone est cliquable) */}
      <div className="relative">
        <select
          value={idx}
          onChange={(e) => setIdx(parseInt(e.target.value, 10))}
          className="w-full appearance-none rounded-2xl border border-black/10 bg-white px-4 py-3 pr-10 text-black"
        >
          {COUNTRIES.map((c, i) => (
            <option key={c.num} value={i}>
              {c.num}. {c.name} {c.flag}  (+{c.dial})
            </option>
          ))}
        </select>
        {/* caret visuel (mais la zone enti√®re est cliquable) */}
        <span className="pointer-events-none absolute right-4 top-1/2 -translate-y-1/2 select-none">‚ñæ</span>
      </div>

      {/* Indicatif + num√©ro */}
      <div className="grid grid-cols-[auto_1fr] gap-3">
        <div
          className="rounded-2xl border border-black/10 bg-white px-4 py-3 text-black flex items-center min-w-[82px]"
          aria-hidden
        >
          {dial}
        </div>
        <input
          type="tel"
          inputMode="numeric"
          placeholder="Num√©ro (sans 0 initial)"
          className="w-full rounded-2xl border border-black/10 bg-white px-4 py-3 text-black placeholder-black/40 outline-none"
          value={local}
          onChange={(e) => setLocal(e.target.value)}
        />
      </div>
    </div>
  );
}
