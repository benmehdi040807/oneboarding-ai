// datasource & generator
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Enums
enum PlanType {
  CONTINU
  PASS1MOIS
}

enum SubStatus {
  APPROVAL_PENDING
  APPROVED
  ACTIVE
  SUSPENDED
  CANCELLED
  EXPIRED
}

// Utilisateur (identité = téléphone)
model User {
  id         String   @id @default(cuid())
  phoneE164  String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  profile        Profile?
  subscriptions  Subscription[]
  histories      History[]
}

// Abonnements PayPal
model Subscription {
  id               String     @id @default(cuid())
  userId           String
  paypalId         String     @unique
  plan             PlanType
  status           SubStatus
  currentPeriodEnd DateTime?
  cancelAtPeriodEnd Boolean   @default(false)
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([paypalId])
  @@index([status])
}

// Profil (optionnel)
model Profile {
  id        String   @id @default(cuid())
  userId    String   @unique
  name      String?
  title     String?
  org       String?
  locale    String   @default("fr")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Historique d’usage (si utilisé dans l’app)
model History {
  id          String   @id @default(cuid())
  userId      String
  plan        String
  templateId  String
  inputJson   String
  outputText  String
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

// Templates (si utilisés)
model Template {
  id        String   @id @default(cuid())
  slug      String   @unique
  title     String
  locale    String   @default("fr")
  config    String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
